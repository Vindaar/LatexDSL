* v0.1.6
- refactor code to split helpers and DSL
- drop support for Nim 1.4, as the concepts for the helpers break the
  compiler, due to the TeX command enum having characters that are
  binary operators (fixed in 1.6, so I'm not going to work around that
  for old Nim, sorry)
* v0.1.5
- set up docs
- set up CI via Github Actions
- replace internal =&= =NimNode= concatenation by =&&=
- do not export =strformat= any longer    
* v0.1.4
- improve handling of =nnkCommand= to automatically insert
  spaces. This is for the typical case of writing multiple identifiers
  after another to not have to add manual spaces.
- handle =nnkBracket= and =nnkAsgn= (as well as =nnkIdent= to an
  extent)
- allow quoting of Nim expressions using =$(...)= syntax. Any Nim
  expression that can be string evaluated using =$= is allowed in the construct.
* v0.1.3
- allow pragma syntax ={. ... .}= for multiline ={}= arguments
- properly handle successive tex commands using =\= (nnkInfix)
- add some caveats to README
- add some tabularx commands to CT checked list
- add =tableRows= helper proc to join a =varargs[string]= into a valid
  TeX table row
* v0.1.2
- improve example in README to make use of =latex= macro for the
  captions. Why have it and not use it?
- allow =nnkRefTy= (for =\ref=), =nnkCurly= and check commands only if
  not a nested =nnkAccQuoted=
* v0.1.1
- add sugar:
  - =figure=: create TeX code for a figure, including the option to
    check whether the file exists at runtime
  - =toTexTable=: converts something like a ggplotnim =DataFrame= to a
    TeX table
- fix an issue with accidentally looking at already parsed TeX code again
* v0.1.0
- basic =latex= macro with compile time checks of most important TeX
  commands is working, allowing for Nim symbol interpolation
